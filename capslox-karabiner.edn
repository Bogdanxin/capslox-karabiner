{;; here's the definition

    ;; !  | means mandatory
    ;; #  | means optional
    ;; C  | left_command
    ;; T  | left_control
    ;; O  | left_option
    ;; S  | left_shift
    ;; F  | fn
    ;; Q  | right_command
    ;; W  | right_control
    ;; E  | right_option
    ;; R  | right_shift
    ;; P  | caps_lock
    ;; !! | mandatory command + control + optional + shift (hyper)
    ;; ## | optional any

 :profiles {:Default {:default true
                      :sim     50     ;; simultaneous_threshold_milliseconds (def: 50)
                        ;; if keydown event for two different keys are pressed within :sim ms, the keypresses are considered simultaneous
                      :delay   50    ;; to_delayed_action_delay_milliseconds (def: 500)
                        ;; after :delay ms, the key press is considered to be delayed (used for double-press macros)
                      :alone   50    ;; to_if_alone_timeout_milliseconds (def: 1000)
                        ;; if keyup event comes within :alone ms from keydown, the key is not just pressed but held
                      :held    50}}    ;; to_if_held_down_threshold_milliseconds (def: 500)
                        ;; key is fired twice when :held ms is elapsed (otherwise seen as a hold command) (TODO WHAT IS THIS??)


 ;the default value is 250
 :simlayer-threshold 500

 :applications {:terminals ["^com\\.apple\\.Terminal$", "^com\\.googlecode\\.iterm2$", "^com\\.jetbrains\\.(.*)$"]
                :textEditors ["^app\\.cyan\\.taio$", "^com\\.agiletortoise\\.Drafts-OSX$"]
                :taio ["^app\\.cyan\\.taio$"]
                :drafts ["^com\\.agiletortoise\\.Drafts-OSX$"]
                :jetbrains ["^com\\.jetbrains\\.(.*)$"]
                :vscode ["^com\\.microsoft\\.VSCode$"]}


 :main [{:des "Capslock赋能"
         :rules [;; Capslock键设置为Hyper键
                 [:##caps_lock :!QWEright_shift nil {:alone :escape}]
                 ;; Capslock + Esc = 切换大小写
                 [:!QWERescape :!Tcaps_lock]
                 ;; Capslock + SpaceBar = 切换输入法
                 [:!QWERspacebar :!Tspacebar]]}


        {:des   "光标移动"
         :rules [;; Capslock + E = 向上移动
                 [:!QWERe :up_arrow]
                 ;; Capslock + D = 向下移动
                 [:!QWERd :down_arrow]
                 ;; Capslock + S = 向左移动
                 [:!QWERs :left_arrow]
                 ;; Capslock + F = 向右移动
                 [:!QWERf :right_arrow]
                 ;; Capslock + A = 向左移动一个单词
                 [:!QWERa :!Oleft_arrow]
                 ;; Capslock + G = 向右移动一个单词
                 [:!QWERg :!Oright_arrow]
                 ;; Capslock + P = 移动至行首
                 [:!QWERp :!Cleft_arrow [:!terminals]]
                 ;; Capslock + ; = 移动至行尾
                 [:!QWERsemicolon :!Cright_arrow [:!terminals]]
                 ;; Capslock + P = 移动至行首(terminal中)
                 [:!QWERp :!Ta [:terminals]]
                 ;; Capslock + ; = 移动至行尾(terminal中)
                 [:!QWERsemicolon :!Te [:terminals]]
                 ;; Capslock + Command + P = 移动至页首
                 [:!QWERCp :!FCleft_arrow [:!textEditors]]
                 ;; Capslock + Command + ; = 移动至页尾
                 [:!QWERCsemicolon :!FCright_arrow [:!textEditors]]
                 ;; Capslock + Command + P = 移动至页首(textEditor中)
                 [:!QWERCp :!Cup_arrow [:textEditors]]
                 ;; Capslock + Command + ; = 移动至页尾(textEditor中)
                 [:!QWERCsemicolon :!Cdown_arrow [:textEditors]]]}


        {:des   "光标选中"
         :rules [;; Capslock + I = 向上选中
                 [:!QWERi :!Sup_arrow]
                 ;; Capslock + K = 向下选中
                 [:!QWERk :!Sdown_arrow]
                 ;; Capslock + J = 向左选中
                 [:!QWERj :!Sleft_arrow]
                 ;; Capslock + L = 向右选中
                 [:!QWERl :!Sright_arrow]
                 ;; Capslock + H = 向左选中一个单词
                 [:!QWERh :!OSleft_arrow]
                 ;; Capslock + N = 向右选中一个单词
                 [:!QWERn :!OSright_arrow]
                 ;; Capslock + Y = 向外括选区域
                 [:!QWERy :!Oup_arrow]
                 ;; Capslock + B = 向内缩减区域
                 [:!QWERb :!Odown_arrow]
                 ;; Capslock + U = 选中至行首
                 [:!QWERu :!SCleft_arrow]
                 ;; Capslock + O = 选中至行尾
                 [:!QWERo :!SCright_arrow]
                 ;; Capslock + Command + U = 选中至页首
                 [:!QWERCu :!SFCleft_arrow [:jetbrains]]
                 ;; Capslock + Command + O = 选中至页首
                 [:!QWERCo :!SFCright_arrow [:jetbrains]]
                 ;; Capslock + Command + U = 选中至页首
                 [:!QWERCu :!SCup_arrow [:!jetbrains]]
                 ;; Capslock + Command + O = 选中至页首
                 [:!QWERCo :!SCdown_arrow [:!jetbrains]]
                 ;; Capslock + , = 选中当前单词
                 [:!QWERcomma [:!Oleft_arrow :!OSright_arrow]]
                 ;; Capslock + Command + , = 选中当前行
                 [:!QWERCcomma [:!Cleft_arrow :!SCright_arrow]]
                 ;; Capslock + Command + I = 选中的行向上移动
                 [:!QWERCi :!SOup_arrow [:!textEditors]]
                 ;; Capslock + Command + K = 选中的行向下移动
                 [:!QWERCk :!SOdown_arrow [:!textEditors]]
                 [:!QWERCcomma [:!Cleft_arrow :!SCright_arrow]]
                 ;; Capslock + Command + I = 选中的行向上移动(taio中)
                 [:!QWERCi :!COup_arrow [:taio]]
                 ;; Capslock + Command + K = 选中的行向下移动(taio中)
                 [:!QWERCk :!COdown_arrow [:taio]]
                 [:!QWERCcomma [:!Cleft_arrow :!SCright_arrow]]
                 ;; Capslock + Command + I = 选中的行向上移动(drafts中)
                 [:!QWERCi :!Oup_arrow [:drafts]]
                 ;; Capslock + Command + K = 选中的行向下移动(drafts中)
                 [:!QWERCk :!Odown_arrow [:drafts]]]}


        {:des   "文本删除"
         :rules [;; Capslock + W = 向左删除
                 [:!QWERw :delete_or_backspace]
                 ;; Capslock + R = 向右删除
                 [:!QWERr :delete_forward]
                 ;; Capslock + Command + W = 向左删除一个单词
                 [:!QWERCw :!Odelete_or_backspace]
                 ;; Capslock + Command + R = 向右删除一个单词
                 [:!QWERCr :!Odelete_forward]
                 ;; Capslock + [ = 删除至行首
                 [:!QWERopen_bracket [:!SCleft_arrow :delete_or_backspace]]
                 ;; Capslock + / = 删除至行尾
                 [:!QWERslash [:!SCright_arrow :delete_or_backspace]]
                 ;; Capslock + Delete = 删除当前行
                 [:!QWERdelete_or_backspace :!Cdelete_or_backspace [:!textEditors]]
                 ;; Capslock + Delete = 删除当前行
                 [:!QWERdelete_or_backspace [:!Cright_arrow :!SCleft_arrow :delete_or_backspace] [:textEditors]]
                 ;; Capslock + Command + Delete = 删除全部内容
                 [:!QWERCdelete_or_backspace [:!Ca :delete_or_backspace]]]}


        {:des   "鼠标操作"
         :rules [;; Capslock + 鼠标左击 = 鼠标前进
                 [{:pkey :button1 :modi [:right_command :right_control :right_option :right_shift]} :button5]
                 ;; Capslock + 鼠标右击 = 鼠标后退
                 [{:pkey :button2 :modi [:right_command :right_control :right_option :right_shift]} :button4]]}]}
